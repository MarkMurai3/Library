
const sendBtn = document.getElementById("send");

function getTitleValue(){
    const titleInfo = document.getElementById("title");
    const titleValue = titleInfo.value;
    console.log("Title is " + titleValue);
    return titleValue;
}

function getAuthor(){
    const authorValue = document.getElementById("author");
    return authorValue.value;
}

function getNumPages(){
    const numPages = document.getElementById("pages");
    return numPages.value;
}

function getRead(){
    const readIt = document.getElementById("read");
    console.log(readIt);
    if(readIt.value == 'on'){
        readIt.value = "Read it";
    }
    else{
        readIt.value = "Haven't read it yet";
    } //THE FIRST TIME ADDING A NEW BOOK THE VALUE IS ALWAYS "READ IT". FIX IT 
    return readIt.value;
}

sendBtn.addEventListener("click", () => {
    addBookToLibrary();
});


function addBookToLibrary(){
    // take params, create a book then store it in the array
    const title = getTitleValue();
    const author = getAuthor();
    const pages = getNumPages();
    const read = getRead();

    let id = crypto.randomUUID();
    if(title == '' || author == '' || pages == '') return 0;
    myLibrary.push(new Book(title, author, pages, read, id));
    refreshTable();

}


function Book(title, author, pages, read, id){
    if(!new.target){
        throw Error("Use 'new' ya fool");
    }
        this.title = title;
        this.author = author;
        this.pages = pages;
        this.read = read;
        this.id = id;
        this.info = function(){
            console.log(this.title, this.author, this.pages, this.read, this.id);
        };
}


// const theHobbit = new Book("The Hobbit", "by J.R.R. Tolkien", "295 pages", "not read yet");


const myLibrary = [];





function newTable(){
    const table = document.querySelector("table");
    const rows = document.querySelectorAll("tr");
    for(let i = 1; i <= rows.length(); i++){
        rows[i].remove();  //SOMETHING LIKE THAT. FIX IT
    }
    console.log(rows);

}

//Gotta play with the DOM
function refreshTable(){
    for (const i of myLibrary) {
    
    }
}






// console.log(theHobbit);

// All the Book objects are gonna be stored in an array. 
// All the book objects should have a unique ID generated by crypto.randomUUID()

// Function that loops through the array and displays each book on the page
// Display in tables or "each on their own card".
// First store books in array, then display them
// Add a "New Book" button that brings up a form allowing users to input the details
// of the new book and add it to the library: author, title, number of pages, 
// whether is's been read and anything you might want. 

// How you display this form is up to you. (examples: form shown on a sidebar or explore dialogs and modals with <dialog>)
// Submit tries to send data tom a server by default. "event.preventDefault();" will come in handy

// Add a button on each book's display to remove the book from the library
// Need to associate your DOM elements with the actual book objects in some way. One easy
// solution is giving them a "data-attribute" that corresponds to the unique id of the respective book object

// Add a button on each book's display to change its "read" status. To facilitate this 
// you'll want to create a Book prototype function that toggles a book instance's "read" status

// You're not required to add any type of storage to save the information between page reloads.